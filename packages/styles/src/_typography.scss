@use 'sass:map';
@use 'sass:string';
@use 'tokens';

$font-variants: (
  demi-bold: (
    family: var(--font-greycliff-demi-bold),
    weight: var(--font-weight-500, 500),
    manrope: var(--font-manrope-semi-bold),
  ),
  bold: (
    family: var(--font-greycliff-demi-bold),
    weight: var(--font-weight-500, 500),
    manrope: var(--font-manrope-semi-bold),
  ),
  ex-bold: (
    family: var(--font-greycliff-demi-bold),
    weight: var(--font-weight-500, 500),
    manrope: var(--font-manrope-semi-bold),
  ),
  normal: (
    family: var(--font-greycliff-medium),
    weight: var(--font-weight-500, 500),
    manrope: var(--font-manrope-medium),
  ),
  light: (
    family: var(--font-greycliff-light),
  ),
) !default;

@each $key, $size in tokens.$font-sizes {
  .fs-#{$key} {
    font-size: var(--font-size-#{$key}, $size) !important; // fs10..fs16
  }
}

@each $key, $lh in tokens.$line-heights {
  .lh-#{$key} {
    line-height: var(--font-line-height-#{$key}, $lh) !important;
  }
}

@each $key, $ls in tokens.$letter-spacings {
  .ls-#{$key} {
    letter-spacing: var(--font-letter-spacing-#{$key}, $ls) !important;
  }
}

@each $key, $settings in $font-variants {
  .font-#{$key} {
    font-family: map.get($settings, family);

    @if map.has-key($settings, weight) {
      font-weight: map.get($settings, weight);
    }

    @if map.has-key($settings, manrope) {
      &-manrope {
        font-family: map.get($settings, manrope);
      }
    }
  }
}

h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6,
.h7,
.h1-big {
  color: map.get(tokens.$colors, pernia-black);
  font-family: var(--font-greycliff-demi-bold);
  font-weight: var(--font-weight-500, 500);
}

$heading-selectors: (
  h1-big: '.h1-big',
  h1: 'h1, .h1',
  h2: 'h2, .h2',
  h3: 'h3, .h3',
  h4: 'h4, .h4',
  h5: 'h5, .h5',
  h6: 'h6, .h6',
  h7: '.h7',
) !default;

$typo-settings: (
  min-b1: (
    h1-big: (
      font-size: var(--font-size-40),
      line-height: var(--line-height-1-4),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h1: (
      font-size: var(--font-size-32),
      line-height: var(--line-height-1-38),
      letter-spacing: var(--letter-spacing-0-8),
    ),
    h2: (
      font-size: var(--font-size-28),
      line-height: var(--line-height-1-43),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h3: (
      font-size: var(--font-size-24),
      line-height: var(--line-height-1-33),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h4: (
      font-size: var(--font-size-20),
      line-height: var(--line-height-1-4),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h5: (
      font-size: var(--font-size-18),
      line-height: var(--line-height-1-33),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h6: (
      font-size: var(--font-size-16),
      line-height: var(--line-height-1-5),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h7: (
      font-size: var(--font-size-13),
      line-height: var(--line-height-1-43),
      letter-spacing: var(--letter-spacing-0-4),
    ),
  ),

  range-b2-b1: (
    h1-big: (
      font-size: var(--font-size-32),
      line-height: var(--line-height-44),
      letter-spacing: var(--letter-spacing-0-8),
    ),
    h1: (
      font-size: var(--font-size-28),
      line-height: var(--line-height-40),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h2: (
      font-size: var(--font-size-24),
      line-height: var(--line-height-1-33),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h3: (
      font-size: var(--font-size-20),
      line-height: var(--line-height-1-4),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h4: (
      font-size: var(--font-size-18),
      line-height: var(--line-height-30),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h5: (
      font-size: var(--font-size-16),
      line-height: var(--line-height-24),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h6: (
      font-size: var(--font-size-14),
      line-height: var(--line-height-20),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h7: (
      font-size: var(--font-size-12),
      line-height: var(--line-height-1-33),
      letter-spacing: var(--letter-spacing-0-4),
    ),
  ),

  range-b3-b2: (
    h1-big: (
      font-size: var(--font-size-28),
      line-height: var(--line-height-40),
      letter-spacing: var(--letter-spacing-0-8),
    ),
    h1: (
      font-size: var(--font-size-24),
      line-height: var(--line-height-32),
      letter-spacing: var(--letter-spacing-0-6),
    ),
    h2: (
      font-size: var(--font-size-20),
      line-height: var(--line-height-28),
      letter-spacing: var(--letter-spacing-0-6),
    ),
    h3: (
      font-size: var(--font-size-18),
      line-height: var(--line-height-24),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h4: (
      font-size: var(--font-size-16),
      line-height: var(--line-height-24),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h5: (
      font-size: var(--font-size-14),
      line-height: var(--line-height-22),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h6: (
      font-size: var(--font-size-13),
      line-height: var(--line-height-18),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h7: (
      font-size: var(--font-size-12),
      line-height: var(--line-height-20),
      letter-spacing: var(--letter-spacing-0-4),
    ),
  ),

  range-b4-b3: (
    h1-big: (
      font-size: var(--font-size-24),
      line-height: var(--line-height-32),
      letter-spacing: var(--letter-spacing-0-6),
    ),
    h1: (
      font-size: var(--font-size-20),
      line-height: var(--line-height-28),
      letter-spacing: var(--letter-spacing-0-6),
    ),
    h2: (
      font-size: var(--font-size-18),
      line-height: var(--line-height-24),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h3: (
      font-size: var(--font-size-16),
      line-height: var(--line-height-24),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h4: (
      font-size: var(--font-size-14),
      line-height: var(--line-height-20),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h5: (
      font-size: var(--font-size-13),
      line-height: var(--line-height-20),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h6: (
      font-size: var(--font-size-12),
      line-height: var(--line-height-20),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h7: (
      font-size: var(--font-size-11),
      line-height: var(--line-height-18),
      letter-spacing: var(--letter-spacing-0-4),
    ),
  ),

  max-b4: (
    h1-big: (
      font-size: var(--font-size-20),
      line-height: var(--line-height-28),
      letter-spacing: var(--letter-spacing-0-6),
    ),
    h1: (
      font-size: var(--font-size-18),
      line-height: var(--line-height-24),
      letter-spacing: var(--letter-spacing-0-6),
    ),
    h2: (
      font-size: var(--font-size-16),
      line-height: var(--line-height-24),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h3: (
      font-size: var(--font-size-14),
      line-height: var(--line-height-22),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h4: (
      font-size: var(--font-size-13),
      line-height: var(--line-height-20),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h5: (
      font-size: var(--font-size-12),
      line-height: var(--line-height-20),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h6: (
      font-size: var(--font-size-12),
      line-height: var(--line-height-20),
      letter-spacing: var(--letter-spacing-0-4),
    ),
    h7: (
      font-size: var(--font-size-11),
      line-height: var(--line-height-18),
      letter-spacing: var(--letter-spacing-0-4),
    ),
  ),
) !default;

@mixin apply-typography($settings) {
  @each $level, $props in $settings {
    #{map.get($heading-selectors, $level)} {
      @each $prop, $val in $props {
        #{$prop}: $val;
      }
    }
  }
}

@media only screen and (min-width: map.get(tokens.$breakpoints-min, b1)) {
  @include apply-typography(map.get($typo-settings, min-b1));
}

@media only screen and (min-width: map.get(tokens.$breakpoints-min, b2)) and (max-width: map.get(tokens.$breakpoints-min, b1)) {
  @include apply-typography(map.get($typo-settings, range-b2-b1));
}

@media only screen and (min-width: map.get(tokens.$breakpoints-min, b3)) and (max-width: map.get(tokens.$breakpoints-min, b2)) {
  @include apply-typography(map.get($typo-settings, range-b3-b2));
}

@media only screen and (min-width: map.get(tokens.$breakpoints-min, b4)) and (max-width: map.get(tokens.$breakpoints-min, b3)) {
  @include apply-typography(map.get($typo-settings, range-b4-b3));
}

@media only screen and (max-width: map.get(tokens.$breakpoints-min, b4)) {
  @include apply-typography(map.get($typo-settings, max-b4));
}

.p1,
.p2,
.p3,
.p4,
.p5,
.p6,
.p7 {
  color: map.get(tokens.$colors, pernia-black);
  letter-spacing: 0.2px;
}

$para-selectors: (
  p1: '.p1',
  p2: '.p2',
  p3: '.p3',
  p4: '.p4',
  p5: '.p5',
  p6: '.p6',
  p7: '.p7',
) !default;

$para-typo-settings: (
  min-b2: (
    p1: (
      font-size: var(--para-font-size-16),
      line-height: var(--para-line-height-26),
    ),
    p2: (
      font-size: var(--para-font-size-14),
      line-height: var(--para-line-height-24),
    ),
    p3: (
      font-size: var(--para-font-size-13),
      line-height: var(--para-line-height-22),
    ),
    p4: (
      font-size: var(--para-font-size-12),
      line-height: var(--para-line-height-20),
    ),
    p5: (
      font-size: var(--para-font-size-11),
      line-height: var(--para-line-height-18),
    ),
    p6: (
      font-size: var(--para-font-size-10),
      line-height: var(--para-line-height-1-5),
    ),
    p7: null,
  ),

  range-b3-b2: (
    p1: (
      font-size: var(--para-font-size-14),
      line-height: var(--para-line-height-24),
    ),
    p2: (
      font-size: var(--para-font-size-13),
      line-height: var(--para-line-height-22),
    ),
    p3: (
      font-size: var(--para-font-size-12),
      line-height: var(--para-line-height-20),
    ),
    p4: (
      font-size: var(--para-font-size-12),
      line-height: var(--para-line-height-20),
    ),
    p5: (
      font-size: var(--para-font-size-11),
      line-height: var(--para-line-height-18),
    ),
    p6: (
      font-size: var(--para-font-size-10),
      line-height: var(--para-line-height-1-5),
    ),
    p7: null,
  ),

  range-b4-b3: (
    p1: (
      font-size: var(--para-font-size-13),
      line-height: var(--para-line-height-22),
    ),
    p2: (
      font-size: var(--para-font-size-12),
      line-height: var(--para-line-height-20),
    ),
    p3: (
      font-size: var(--para-font-size-11),
      line-height: var(--para-line-height-18),
    ),
    p4: (
      font-size: var(--para-font-size-11),
      line-height: var(--para-line-height-18),
    ),
    p5: (
      font-size: var(--para-font-size-10),
      line-height: var(--para-line-height-16),
    ),
    p6: (
      font-size: var(--para-font-size-9),
      line-height: var(--para-line-height-16),
    ),
    p7: null,
  ),

  max-b4: (
    p1: (
      font-size: var(--para-font-size-12),
      line-height: var(--para-line-height-20),
    ),
    p2: (
      font-size: var(--para-font-size-11),
      line-height: var(--para-line-height-18),
    ),
    p3: (
      font-size: var(--para-font-size-11),
      line-height: var(--para-line-height-18),
    ),
    p4: (
      font-size: var(--para-font-size-10),
      line-height: var(--para-line-height-16),
    ),
    p5: (
      font-size: var(--para-font-size-10),
      line-height: var(--para-line-height-16),
    ),
    p6: (
      font-size: var(--para-font-size-9),
      line-height: var(--para-line-height-16),
    ),
    p7: null,
  ),
) !default;

@mixin apply-para-typo($settings) {
  @each $key, $props in $settings {
    $sel: map.get($para-selectors, $key);

    @if $sel and $props {
      #{string.unquote($sel)} {
        @each $prop, $val in $props {
          #{$prop}: #{$val};
        }
      }
    }
  }
}

@media only screen and (min-width: map.get(tokens.$breakpoints-min, b2)) {
  @include apply-para-typo(map.get($para-typo-settings, 'min-b2'));
}

@media only screen and (min-width: map.get(tokens.$breakpoints-min, b3)) and (max-width: map.get(tokens.$breakpoints-min, b2)) {
  @include apply-para-typo(map.get($para-typo-settings, 'range-b3-b2'));
}

@media only screen and (min-width: map.get(tokens.$breakpoints-min, b4)) and (max-width: map.get(tokens.$breakpoints-min, b3)) {
  @include apply-para-typo(map.get($para-typo-settings, 'range-b4-b3'));
}

@media only screen and (max-width: map.get(tokens.$breakpoints-min, b4)) {
  @include apply-para-typo(map.get($para-typo-settings, 'max-b4'));
}
